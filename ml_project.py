# -*- coding: utf-8 -*-
"""ml-project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/AdarshRai0711/f581f65915cb4900413478be65006f6f/ml-project.ipynb
"""

import pandas as pd

df= pd.read_csv('/content/weatherdata.csv')
df.head()

df.dtypes

df.shape

df.info()

print(df.isnull().sum())

print(df.describe())

df.dropna(inplace = True, axis=0)

df.drop(['Unnamed: 0', 'Date'], inplace = True, axis = 1)

print(df.isnull().sum())

df.shape

from sklearn.preprocessing import LabelEncoder

encoder_a = LabelEncoder()
df['Location'] = encoder_a.fit_transform(df['Location'])

encoder_c = LabelEncoder()
df['WindDir9am'] = encoder_c.fit_transform(df['WindDir9am'])

encoder_b = LabelEncoder()
df['WindDir3pm'] = encoder_b.fit_transform(df['WindDir3pm'])

encoder_b = LabelEncoder()
df['RainToday'] = encoder_b.fit_transform(df['RainToday'])

encoder_b = LabelEncoder()
df['RainTomorrow'] = encoder_b.fit_transform(df['RainTomorrow'])

encoder_b = LabelEncoder()
df['WindGustDir'] = encoder_b.fit_transform(df['WindGustDir'])

import seaborn as sns
import matplotlib.pyplot as plt

for col in df.select_dtypes([float, int]).columns:
  sns.boxplot(df[col])
  plt.title(col)
  plt.show()

x = df.drop('RainTomorrow', axis=1)
y = df['RainTomorrow']

from sklearn.model_selection import train_test_split

xtrain, xtest, ytrain, ytest = train_test_split(x, y, train_size =0.8 )

from sklearn.tree import DecisionTreeClassifier

model = DecisionTreeClassifier(max_depth = 8,max_leaf_nodes = 10 )
model

model.fit(xtrain, ytrain)

trainpred = model.predict(xtrain)
testpred = model.predict(xtest)

from sklearn.metrics import classification_report

print(classification_report(ytrain, trainpred))

print(classification_report(ytest, testpred))

"""# Second Model (Logistic Regressor)"""

from sklearn.linear_model import LogisticRegression

model = LogisticRegression()

model.fit(xtrain, ytrain)

trainpred = model.predict(xtrain)
testpred = model.predict(xtest)

from sklearn.metrics import classification_report

print(classification_report(ytrain, trainpred))

print(classification_report(ytest, testpred))